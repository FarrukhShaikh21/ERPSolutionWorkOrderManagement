package erpsolwom.erpsolwommodel.erpsolwomeo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobClassModel;
import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 04 01:14:32 PKT 2024
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrPurchaseDemandLinesImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Demandlinesseq,
        Demandheaderseq,
        ItemId,
        RequiredByDate,
        DemandQuantity,
        ApproveQuantity,
        DepartmentId,
        ProjectId,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        NoteToBuyer,
        NoteToSupplier,
        AproxPrice,
        txtItemName,
        SrPurchaseDemandHeader,
        SrItems,
        SrPurchaseRfqLines;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DEMANDLINESSEQ = AttributesEnum.Demandlinesseq.index();
    public static final int DEMANDHEADERSEQ = AttributesEnum.Demandheaderseq.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int REQUIREDBYDATE = AttributesEnum.RequiredByDate.index();
    public static final int DEMANDQUANTITY = AttributesEnum.DemandQuantity.index();
    public static final int APPROVEQUANTITY = AttributesEnum.ApproveQuantity.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int NOTETOBUYER = AttributesEnum.NoteToBuyer.index();
    public static final int NOTETOSUPPLIER = AttributesEnum.NoteToSupplier.index();
    public static final int APROXPRICE = AttributesEnum.AproxPrice.index();
    public static final int TXTITEMNAME = AttributesEnum.txtItemName.index();
    public static final int SRPURCHASEDEMANDHEADER = AttributesEnum.SrPurchaseDemandHeader.index();
    public static final int SRITEMS = AttributesEnum.SrItems.index();
    public static final int SRPURCHASERFQLINES = AttributesEnum.SrPurchaseRfqLines.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrPurchaseDemandLinesImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolwom.erpsolwommodel.erpsolwomeo.SrPurchaseDemandLines");
    }


    /**
     * Gets the attribute value for Demandlinesseq, using the alias name Demandlinesseq.
     * @return the value of Demandlinesseq
     */
    public Integer getDemandlinesseq() {
        return (Integer) getAttributeInternal(DEMANDLINESSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Demandlinesseq.
     * @param value value to set the Demandlinesseq
     */
    public void setDemandlinesseq(Integer value) {
        setAttributeInternal(DEMANDLINESSEQ, value);
    }

    /**
     * Gets the attribute value for Demandheaderseq, using the alias name Demandheaderseq.
     * @return the value of Demandheaderseq
     */
    public Integer getDemandheaderseq() {
        return (Integer) getAttributeInternal(DEMANDHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Demandheaderseq.
     * @param value value to set the Demandheaderseq
     */
    public void setDemandheaderseq(Integer value) {
        setAttributeInternal(DEMANDHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for ItemId, using the alias name ItemId.
     * @return the value of ItemId
     */
    public Integer getItemId() {
        return (Integer) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemId.
     * @param value value to set the ItemId
     */
    public void setItemId(Integer value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for RequiredByDate, using the alias name RequiredByDate.
     * @return the value of RequiredByDate
     */
    public Date getRequiredByDate() {
        return (Date) getAttributeInternal(REQUIREDBYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RequiredByDate.
     * @param value value to set the RequiredByDate
     */
    public void setRequiredByDate(Date value) {
        setAttributeInternal(REQUIREDBYDATE, value);
    }

    /**
     * Gets the attribute value for DemandQuantity, using the alias name DemandQuantity.
     * @return the value of DemandQuantity
     */
    public BigDecimal getDemandQuantity() {
        return (BigDecimal) getAttributeInternal(DEMANDQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for DemandQuantity.
     * @param value value to set the DemandQuantity
     */
    public void setDemandQuantity(BigDecimal value) {
        setAttributeInternal(DEMANDQUANTITY, value);
    }

    /**
     * Gets the attribute value for ApproveQuantity, using the alias name ApproveQuantity.
     * @return the value of ApproveQuantity
     */
    public BigDecimal getApproveQuantity() {
        return (BigDecimal) getAttributeInternal(APPROVEQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ApproveQuantity.
     * @param value value to set the ApproveQuantity
     */
    public void setApproveQuantity(BigDecimal value) {
        setAttributeInternal(APPROVEQUANTITY, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public String getDepartmentId() {
        return (String) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(String value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public Integer getProjectId() {
        return (Integer) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(Integer value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the value of LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdatedDate, using the alias name LastUpdatedDate.
     * @return the value of LastUpdatedDate
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedDate.
     * @param value value to set the LastUpdatedDate
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for NoteToBuyer, using the alias name NoteToBuyer.
     * @return the value of NoteToBuyer
     */
    public String getNoteToBuyer() {
        return (String) getAttributeInternal(NOTETOBUYER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoteToBuyer.
     * @param value value to set the NoteToBuyer
     */
    public void setNoteToBuyer(String value) {
        setAttributeInternal(NOTETOBUYER, value);
    }

    /**
     * Gets the attribute value for NoteToSupplier, using the alias name NoteToSupplier.
     * @return the value of NoteToSupplier
     */
    public String getNoteToSupplier() {
        return (String) getAttributeInternal(NOTETOSUPPLIER);
    }

    /**
     * Sets <code>value</code> as the attribute value for NoteToSupplier.
     * @param value value to set the NoteToSupplier
     */
    public void setNoteToSupplier(String value) {
        setAttributeInternal(NOTETOSUPPLIER, value);
    }

    /**
     * Gets the attribute value for AproxPrice, using the alias name AproxPrice.
     * @return the value of AproxPrice
     */
    public BigDecimal getAproxPrice() {
        return (BigDecimal) getAttributeInternal(APROXPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for AproxPrice.
     * @param value value to set the AproxPrice
     */
    public void setAproxPrice(BigDecimal value) {
        setAttributeInternal(APROXPRICE, value);
    }

    /**
     * Gets the attribute value for txtItemName, using the alias name txtItemName.
     * @return the value of txtItemName
     */
    public String gettxtItemName() {
        return (String) getAttributeInternal(TXTITEMNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for txtItemName.
     * @param value value to set the txtItemName
     */
    public void settxtItemName(String value) {
        setAttributeInternal(TXTITEMNAME, value);
    }

    /**
     * @return the associated entity SrPurchaseDemandHeaderImpl.
     */
    public SrPurchaseDemandHeaderImpl getSrPurchaseDemandHeader() {
        return (SrPurchaseDemandHeaderImpl) getAttributeInternal(SRPURCHASEDEMANDHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity SrPurchaseDemandHeaderImpl.
     */
    public void setSrPurchaseDemandHeader(SrPurchaseDemandHeaderImpl value) {
        setAttributeInternal(SRPURCHASEDEMANDHEADER, value);
    }


    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getSrItems() {
        return (EntityImpl) getAttributeInternal(SRITEMS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setSrItems(EntityImpl value) {
        setAttributeInternal(SRITEMS, value);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getSrPurchaseRfqLines() {
        return (RowIterator) getAttributeInternal(SRPURCHASERFQLINES);
    }


    /**
     * @param demandlinesseq key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer demandlinesseq) {
        return new Key(new Object[] { demandlinesseq });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    @Override
    protected void create(AttributeList attributeList) {
        // TODO Implement this method
        setERPSolPKColumnName("Demandlinesseq");
        setERPSolPKSeqName("SR_PURCHASE_DEMAND_LINES_SEQ");
    //        setERPISGenertePK("NO");
    //        SequenceImpl seq = new SequenceImpl("SO_SALES_ORDER_SEQ", getDBTransaction());
    //        setSalesorderseq(seq.getSequenceNumber());
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation!=DML_DELETE) {
            populateAttributeAsChanged(APPROVEQUANTITY, getDemandQuantity());
       }
        super.doDML(operation, e);
    }
}

