package erpsolwom.erpsolwommodel.erpsolwomeo;

import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobClassModel;
import erpsolglob.erpsolglobmodel.erpsolglobclasses.ERPSolGlobalsEntityImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 25 22:32:51 PKT 2024
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrgProjectImpl extends ERPSolGlobalsEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ProjectId,
        Locationid,
        Officetypeid,
        Supplierid,
        ReferanceId,
        ProjectName,
        Scope,
        InDate,
        AssignedPerson,
        Remarks,
        Posted,
        PostedBy,
        Createdby,
        CreatedDate,
        Modifiedby,
        ModifiedDate,
        StartDate,
        EstimatedFinishDate;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int OFFICETYPEID = AttributesEnum.Officetypeid.index();
    public static final int SUPPLIERID = AttributesEnum.Supplierid.index();
    public static final int REFERANCEID = AttributesEnum.ReferanceId.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int SCOPE = AttributesEnum.Scope.index();
    public static final int INDATE = AttributesEnum.InDate.index();
    public static final int ASSIGNEDPERSON = AttributesEnum.AssignedPerson.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int POSTEDBY = AttributesEnum.PostedBy.index();
    public static final int CREATEDBY = AttributesEnum.Createdby.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.Modifiedby.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ESTIMATEDFINISHDATE = AttributesEnum.EstimatedFinishDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrgProjectImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("erpsolwom.erpsolwommodel.erpsolwomeo.PrgProject");
    }


    /**
     * Gets the attribute value for ProjectId, using the alias name ProjectId.
     * @return the value of ProjectId
     */
    public Integer getProjectId() {
        return (Integer) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectId.
     * @param value value to set the ProjectId
     */
    public void setProjectId(Integer value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for Locationid, using the alias name Locationid.
     * @return the value of Locationid
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Locationid.
     * @param value value to set the Locationid
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for Officetypeid, using the alias name Officetypeid.
     * @return the value of Officetypeid
     */
    public String getOfficetypeid() {
        return (String) getAttributeInternal(OFFICETYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Officetypeid.
     * @param value value to set the Officetypeid
     */
    public void setOfficetypeid(String value) {
        setAttributeInternal(OFFICETYPEID, value);
    }

    /**
     * Gets the attribute value for Supplierid, using the alias name Supplierid.
     * @return the value of Supplierid
     */
    public String getSupplierid() {
        return (String) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Supplierid.
     * @param value value to set the Supplierid
     */
    public void setSupplierid(String value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the attribute value for ReferanceId, using the alias name ReferanceId.
     * @return the value of ReferanceId
     */
    public String getReferanceId() {
        return (String) getAttributeInternal(REFERANCEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReferanceId.
     * @param value value to set the ReferanceId
     */
    public void setReferanceId(String value) {
        setAttributeInternal(REFERANCEID, value);
    }

    /**
     * Gets the attribute value for ProjectName, using the alias name ProjectName.
     * @return the value of ProjectName
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ProjectName.
     * @param value value to set the ProjectName
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for Scope, using the alias name Scope.
     * @return the value of Scope
     */
    public String getScope() {
        return (String) getAttributeInternal(SCOPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Scope.
     * @param value value to set the Scope
     */
    public void setScope(String value) {
        setAttributeInternal(SCOPE, value);
    }

    /**
     * Gets the attribute value for InDate, using the alias name InDate.
     * @return the value of InDate
     */
    public Date getInDate() {
        return (Date) getAttributeInternal(INDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InDate.
     * @param value value to set the InDate
     */
    public void setInDate(Date value) {
        setAttributeInternal(INDATE, value);
    }

    /**
     * Gets the attribute value for AssignedPerson, using the alias name AssignedPerson.
     * @return the value of AssignedPerson
     */
    public String getAssignedPerson() {
        return (String) getAttributeInternal(ASSIGNEDPERSON);
    }

    /**
     * Sets <code>value</code> as the attribute value for AssignedPerson.
     * @param value value to set the AssignedPerson
     */
    public void setAssignedPerson(String value) {
        setAttributeInternal(ASSIGNEDPERSON, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the value of Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for Posted, using the alias name Posted.
     * @return the value of Posted
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as the attribute value for Posted.
     * @param value value to set the Posted
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for PostedBy, using the alias name PostedBy.
     * @return the value of PostedBy
     */
    public String getPostedBy() {
        return (String) getAttributeInternal(POSTEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PostedBy.
     * @param value value to set the PostedBy
     */
    public void setPostedBy(String value) {
        setAttributeInternal(POSTEDBY, value);
    }

    /**
     * Gets the attribute value for Createdby, using the alias name Createdby.
     * @return the value of Createdby
     */
    public String getCreatedby() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Createdby.
     * @param value value to set the Createdby
     */
    public void setCreatedby(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for Modifiedby, using the alias name Modifiedby.
     * @return the value of Modifiedby
     */
    public String getModifiedby() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Modifiedby.
     * @param value value to set the Modifiedby
     */
    public void setModifiedby(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the value of ModifiedDate
     */
    public Date getModifiedDate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EstimatedFinishDate, using the alias name EstimatedFinishDate.
     * @return the value of EstimatedFinishDate
     */
    public Date getEstimatedFinishDate() {
        return (Date) getAttributeInternal(ESTIMATEDFINISHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimatedFinishDate.
     * @param value value to set the EstimatedFinishDate
     */
    public void setEstimatedFinishDate(Date value) {
        setAttributeInternal(ESTIMATEDFINISHDATE, value);
    }


    /**
     * @param projectId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer projectId) {
        return new Key(new Object[] { projectId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        setERPISGenertePK("NO");
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation==DML_INSERT) {
            String pkValue="nvl(max(project_id),0)+1 ";
            System.out.println(pkValue + "pk value");
            String result= ERPSolGlobClassModel.doGetERPSolPrimaryKeyValueModel(getDBTransaction(), pkValue, "PRG_PROJECT", null, null);
            populateAttributeAsChanged(PROJECTID, Integer.parseInt(result));
        }
        super.doDML(operation, e);
    }
}

