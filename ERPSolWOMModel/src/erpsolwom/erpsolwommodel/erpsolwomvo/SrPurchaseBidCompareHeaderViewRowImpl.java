package erpsolwom.erpsolwommodel.erpsolwomvo;

import erpsolwom.erpsolwommodel.erpsolwomeo.SrPurchaseBidCompareHeaderImpl;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu May 09 08:34:00 PKT 2024
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrPurchaseBidCompareHeaderViewRowImpl extends ViewRowImpl {


    public static final int ENTITY_SRPURCHASEBIDCOMPAREHEADER = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Bidcompareheaderseq,
        BidCompareCode,
        CompareDate,
        DemandCode,
        RfqHeaderCode,
        Remarks,
        Locationid,
        Posted,
        Companyid,
        CreatedBy,
        CreatedDate,
        ModifiedBy,
        Modifieddate,
        PostedDate,
        txtLocationName,
        SrPurchaseBidCompareLinesView,
        AllLocationsVO,
        SrPurchaseRfqHeaderView,
        AccAllLocationsVO,
        AccSrPurchaseRfqHeaderView,
        AccSrPurchaseBidLinesView;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int BIDCOMPAREHEADERSEQ = AttributesEnum.Bidcompareheaderseq.index();
    public static final int BIDCOMPARECODE = AttributesEnum.BidCompareCode.index();
    public static final int COMPAREDATE = AttributesEnum.CompareDate.index();
    public static final int DEMANDCODE = AttributesEnum.DemandCode.index();
    public static final int RFQHEADERCODE = AttributesEnum.RfqHeaderCode.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LOCATIONID = AttributesEnum.Locationid.index();
    public static final int POSTED = AttributesEnum.Posted.index();
    public static final int COMPANYID = AttributesEnum.Companyid.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFIEDDATE = AttributesEnum.Modifieddate.index();
    public static final int POSTEDDATE = AttributesEnum.PostedDate.index();
    public static final int TXTLOCATIONNAME = AttributesEnum.txtLocationName.index();
    public static final int SRPURCHASEBIDCOMPARELINESVIEW = AttributesEnum.SrPurchaseBidCompareLinesView.index();
    public static final int ALLLOCATIONSVO = AttributesEnum.AllLocationsVO.index();
    public static final int SRPURCHASERFQHEADERVIEW = AttributesEnum.SrPurchaseRfqHeaderView.index();
    public static final int ACCALLLOCATIONSVO = AttributesEnum.AccAllLocationsVO.index();
    public static final int ACCSRPURCHASERFQHEADERVIEW = AttributesEnum.AccSrPurchaseRfqHeaderView.index();
    public static final int ACCSRPURCHASEBIDLINESVIEW = AttributesEnum.AccSrPurchaseBidLinesView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrPurchaseBidCompareHeaderViewRowImpl() {
    }

    /**
     * Gets SrPurchaseBidCompareHeader entity object.
     * @return the SrPurchaseBidCompareHeader
     */
    public SrPurchaseBidCompareHeaderImpl getSrPurchaseBidCompareHeader() {
        return (SrPurchaseBidCompareHeaderImpl) getEntity(ENTITY_SRPURCHASEBIDCOMPAREHEADER);
    }

    /**
     * Gets the attribute value for BIDCOMPAREHEADERSEQ using the alias name Bidcompareheaderseq.
     * @return the BIDCOMPAREHEADERSEQ
     */
    public Integer getBidcompareheaderseq() {
        return (Integer) getAttributeInternal(BIDCOMPAREHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for BIDCOMPAREHEADERSEQ using the alias name Bidcompareheaderseq.
     * @param value value to set the BIDCOMPAREHEADERSEQ
     */
    public void setBidcompareheaderseq(Integer value) {
        setAttributeInternal(BIDCOMPAREHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for BID_COMPARE_CODE using the alias name BidCompareCode.
     * @return the BID_COMPARE_CODE
     */
    public String getBidCompareCode() {
        return (String) getAttributeInternal(BIDCOMPARECODE);
    }

    /**
     * Sets <code>value</code> as attribute value for BID_COMPARE_CODE using the alias name BidCompareCode.
     * @param value value to set the BID_COMPARE_CODE
     */
    public void setBidCompareCode(String value) {
        setAttributeInternal(BIDCOMPARECODE, value);
    }

    /**
     * Gets the attribute value for COMPARE_DATE using the alias name CompareDate.
     * @return the COMPARE_DATE
     */
    public Date getCompareDate() {
        return (Date) getAttributeInternal(COMPAREDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPARE_DATE using the alias name CompareDate.
     * @param value value to set the COMPARE_DATE
     */
    public void setCompareDate(Date value) {
        setAttributeInternal(COMPAREDATE, value);
    }

    /**
     * Gets the attribute value for DEMAND_CODE using the alias name DemandCode.
     * @return the DEMAND_CODE
     */
    public String getDemandCode() {
        return (String) getAttributeInternal(DEMANDCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEMAND_CODE using the alias name DemandCode.
     * @param value value to set the DEMAND_CODE
     */
    public void setDemandCode(String value) {
        setAttributeInternal(DEMANDCODE, value);
    }

    /**
     * Gets the attribute value for RFQ_HEADER_CODE using the alias name RfqHeaderCode.
     * @return the RFQ_HEADER_CODE
     */
    public String getRfqHeaderCode() {
        return (String) getAttributeInternal(RFQHEADERCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for RFQ_HEADER_CODE using the alias name RfqHeaderCode.
     * @param value value to set the RFQ_HEADER_CODE
     */
    public void setRfqHeaderCode(String value) {
        setAttributeInternal(RFQHEADERCODE, value);
        while(getSrPurchaseBidCompareLinesView().getRowCount()>0) {
        getSrPurchaseBidCompareLinesView().first().remove();
        }
        
        getAccSrPurchaseBidLinesView().setNamedWhereClauseParam("P_ADF_RFQ_HEADER_CODE", value==null?"0":value);
        getAccSrPurchaseBidLinesView().executeQuery();
        RowSetIterator rsi=getAccSrPurchaseBidLinesView();
        while(rsi.hasNext()) {
        Row nextRow =rsi.next();
        Row newRow=getSrPurchaseBidCompareLinesView().createRow();
        newRow.setAttribute("Demandlinesseq", nextRow.getAttribute("Demandlinesseq"));
        newRow.setAttribute("Rfqlinesseqno", nextRow.getAttribute("Rfqlinesseqno"));
        newRow.setAttribute("Bidlinesseq", nextRow.getAttribute("Bidlinesseq"));
        newRow.setAttribute("Supplierid", nextRow.getAttribute("txtSupplierId"));

        newRow.setAttribute("ItemId", nextRow.getAttribute("ItemId"));
        newRow.setAttribute("BidRate", nextRow.getAttribute("BidPrice"));
        newRow.setAttribute("Quantity", nextRow.getAttribute("Quantity"));
        newRow.setAttribute("DepartmentId", nextRow.getAttribute("DepartmentId"));
        newRow.setAttribute("ProjectId", nextRow.getAttribute("ProjectId"));
        newRow.setAttribute("NetAmount", nextRow.getAttribute("NetPrice"));
        newRow.setAttribute("TaxRate", nextRow.getAttribute("TaxPercent")==null?new BigDecimal(0):nextRow.getAttribute("TaxPercent"));

        //            newRow.setAttribute("RequesterId", nextRow.getAttribute("RequesterId"));
        getSrPurchaseBidCompareLinesView().insertRow(newRow);
        }
    }

    /**
     * Gets the attribute value for REMARKS using the alias name Remarks.
     * @return the REMARKS
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as attribute value for REMARKS using the alias name Remarks.
     * @param value value to set the REMARKS
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LOCATIONID using the alias name Locationid.
     * @return the LOCATIONID
     */
    public String getLocationid() {
        return (String) getAttributeInternal(LOCATIONID);
    }

    /**
     * Sets <code>value</code> as attribute value for LOCATIONID using the alias name Locationid.
     * @param value value to set the LOCATIONID
     */
    public void setLocationid(String value) {
        setAttributeInternal(LOCATIONID, value);
    }

    /**
     * Gets the attribute value for POSTED using the alias name Posted.
     * @return the POSTED
     */
    public String getPosted() {
        return (String) getAttributeInternal(POSTED);
    }

    /**
     * Sets <code>value</code> as attribute value for POSTED using the alias name Posted.
     * @param value value to set the POSTED
     */
    public void setPosted(String value) {
        setAttributeInternal(POSTED, value);
    }

    /**
     * Gets the attribute value for COMPANYID using the alias name Companyid.
     * @return the COMPANYID
     */
    public String getCompanyid() {
        return (String) getAttributeInternal(COMPANYID);
    }

    /**
     * Sets <code>value</code> as attribute value for COMPANYID using the alias name Companyid.
     * @param value value to set the COMPANYID
     */
    public void setCompanyid(String value) {
        setAttributeInternal(COMPANYID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFIEDDATE using the alias name Modifieddate.
     * @return the MODIFIEDDATE
     */
    public Date getModifieddate() {
        return (Date) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIEDDATE using the alias name Modifieddate.
     * @param value value to set the MODIFIEDDATE
     */
    public void setModifieddate(Date value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for POSTED_DATE using the alias name PostedDate.
     * @return the POSTED_DATE
     */
    public Date getPostedDate() {
        return (Date) getAttributeInternal(POSTEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for POSTED_DATE using the alias name PostedDate.
     * @param value value to set the POSTED_DATE
     */
    public void setPostedDate(Date value) {
        setAttributeInternal(POSTEDDATE, value);
    }

    /**
     * Gets the attribute value for TXT_LOCATION_NAME using the alias name txtLocationName.
     * @return the TXT_LOCATION_NAME
     */
    public String gettxtLocationName() {
        return (String) getAttributeInternal(TXTLOCATIONNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TXT_LOCATION_NAME using the alias name txtLocationName.
     * @param value value to set the TXT_LOCATION_NAME
     */
    public void settxtLocationName(String value) {
        setAttributeInternal(TXTLOCATIONNAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SrPurchaseBidCompareLinesView.
     */
    public RowIterator getSrPurchaseBidCompareLinesView() {
        return (RowIterator) getAttributeInternal(SRPURCHASEBIDCOMPARELINESVIEW);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link AllLocationsVO.
     */
    public Row getAllLocationsVO() {
        return (Row) getAttributeInternal(ALLLOCATIONSVO);
    }

    /**
     * Sets the master-detail link AllLocationsVO between this object and <code>value</code>.
     */
    public void setAllLocationsVO(Row value) {
        setAttributeInternal(ALLLOCATIONSVO, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SrPurchaseRfqHeaderView.
     */
    public Row getSrPurchaseRfqHeaderView() {
        return (Row) getAttributeInternal(SRPURCHASERFQHEADERVIEW);
    }

    /**
     * Sets the master-detail link SrPurchaseRfqHeaderView between this object and <code>value</code>.
     */
    public void setSrPurchaseRfqHeaderView(Row value) {
        setAttributeInternal(SRPURCHASERFQHEADERVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccAllLocationsVO.
     */
    public RowSet getAccAllLocationsVO() {
        return (RowSet) getAttributeInternal(ACCALLLOCATIONSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSrPurchaseRfqHeaderView.
     */
    public RowSet getAccSrPurchaseRfqHeaderView() {
        return (RowSet) getAttributeInternal(ACCSRPURCHASERFQHEADERVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> AccSrPurchaseBidLinesView.
     */
    public RowSet getAccSrPurchaseBidLinesView() {
        return (RowSet) getAttributeInternal(ACCSRPURCHASEBIDLINESVIEW);
    }
    @Override
    public boolean isAttributeUpdateable(int i) {
        if (getPosted().equals("Y")) {
            return false;
       }
        return super.isAttributeUpdateable(i);
    }
}

