package erpsolwom.erpsolwommodel.erpsolwomvo;

import erpsolwom.erpsolwommodel.erpsolwomeo.SrPurchaseDemandLinesImpl;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat May 04 11:10:55 PKT 2024
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrPurchaseDemandLinesViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_SRPURCHASEDEMANDLINES = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Demandlinesseq,
        Demandheaderseq,
        ItemId,
        RequiredByDate,
        DemandQuantity,
        ApproveQuantity,
        DepartmentId,
        ProjectId,
        CreatedBy,
        CreatedDate,
        LastUpdatedBy,
        LastUpdatedDate,
        NoteToBuyer,
        NoteToSupplier,
        AproxPrice,
        txtItemName,
        SrItemsView,
        SrPurchaseDemandHeaderView,
        AccSrItemsView,
        AccPrgProjectView,
        AccAllDepartmentsView;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int DEMANDLINESSEQ = AttributesEnum.Demandlinesseq.index();
    public static final int DEMANDHEADERSEQ = AttributesEnum.Demandheaderseq.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int REQUIREDBYDATE = AttributesEnum.RequiredByDate.index();
    public static final int DEMANDQUANTITY = AttributesEnum.DemandQuantity.index();
    public static final int APPROVEQUANTITY = AttributesEnum.ApproveQuantity.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int NOTETOBUYER = AttributesEnum.NoteToBuyer.index();
    public static final int NOTETOSUPPLIER = AttributesEnum.NoteToSupplier.index();
    public static final int APROXPRICE = AttributesEnum.AproxPrice.index();
    public static final int TXTITEMNAME = AttributesEnum.txtItemName.index();
    public static final int SRITEMSVIEW = AttributesEnum.SrItemsView.index();
    public static final int SRPURCHASEDEMANDHEADERVIEW = AttributesEnum.SrPurchaseDemandHeaderView.index();
    public static final int ACCSRITEMSVIEW = AttributesEnum.AccSrItemsView.index();
    public static final int ACCPRGPROJECTVIEW = AttributesEnum.AccPrgProjectView.index();
    public static final int ACCALLDEPARTMENTSVIEW = AttributesEnum.AccAllDepartmentsView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SrPurchaseDemandLinesViewRowImpl() {
    }

    /**
     * Gets SrPurchaseDemandLines entity object.
     * @return the SrPurchaseDemandLines
     */
    public SrPurchaseDemandLinesImpl getSrPurchaseDemandLines() {
        return (SrPurchaseDemandLinesImpl) getEntity(ENTITY_SRPURCHASEDEMANDLINES);
    }

    /**
     * Gets the attribute value for DEMANDLINESSEQ using the alias name Demandlinesseq.
     * @return the DEMANDLINESSEQ
     */
    public Integer getDemandlinesseq() {
        return (Integer) getAttributeInternal(DEMANDLINESSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for DEMANDLINESSEQ using the alias name Demandlinesseq.
     * @param value value to set the DEMANDLINESSEQ
     */
    public void setDemandlinesseq(Integer value) {
        setAttributeInternal(DEMANDLINESSEQ, value);
    }

    /**
     * Gets the attribute value for DEMANDHEADERSEQ using the alias name Demandheaderseq.
     * @return the DEMANDHEADERSEQ
     */
    public Integer getDemandheaderseq() {
        return (Integer) getAttributeInternal(DEMANDHEADERSEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for DEMANDHEADERSEQ using the alias name Demandheaderseq.
     * @param value value to set the DEMANDHEADERSEQ
     */
    public void setDemandheaderseq(Integer value) {
        setAttributeInternal(DEMANDHEADERSEQ, value);
    }

    /**
     * Gets the attribute value for ITEM_ID using the alias name ItemId.
     * @return the ITEM_ID
     */
    public Integer getItemId() {
        return (Integer) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as attribute value for ITEM_ID using the alias name ItemId.
     * @param value value to set the ITEM_ID
     */
    public void setItemId(Integer value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for REQUIRED_BY_DATE using the alias name RequiredByDate.
     * @return the REQUIRED_BY_DATE
     */
    public Date getRequiredByDate() {
        return (Date) getAttributeInternal(REQUIREDBYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for REQUIRED_BY_DATE using the alias name RequiredByDate.
     * @param value value to set the REQUIRED_BY_DATE
     */
    public void setRequiredByDate(Date value) {
        setAttributeInternal(REQUIREDBYDATE, value);
    }

    /**
     * Gets the attribute value for DEMAND_QUANTITY using the alias name DemandQuantity.
     * @return the DEMAND_QUANTITY
     */
    public BigDecimal getDemandQuantity() {
        return (BigDecimal) getAttributeInternal(DEMANDQUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for DEMAND_QUANTITY using the alias name DemandQuantity.
     * @param value value to set the DEMAND_QUANTITY
     */
    public void setDemandQuantity(BigDecimal value) {
        setAttributeInternal(DEMANDQUANTITY, value);
    }

    /**
     * Gets the attribute value for APPROVE_QUANTITY using the alias name ApproveQuantity.
     * @return the APPROVE_QUANTITY
     */
    public BigDecimal getApproveQuantity() {
        return (BigDecimal) getAttributeInternal(APPROVEQUANTITY);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVE_QUANTITY using the alias name ApproveQuantity.
     * @param value value to set the APPROVE_QUANTITY
     */
    public void setApproveQuantity(BigDecimal value) {
        setAttributeInternal(APPROVEQUANTITY, value);
    }

    /**
     * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @return the DEPARTMENT_ID
     */
    public String getDepartmentId() {
        return (String) getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
     * @param value value to set the DEPARTMENT_ID
     */
    public void setDepartmentId(String value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public Integer getProjectId() {
        return (Integer) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(Integer value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Date value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Date getLastUpdatedDate() {
        return (Date) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Date value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for NOTE_TO_BUYER using the alias name NoteToBuyer.
     * @return the NOTE_TO_BUYER
     */
    public String getNoteToBuyer() {
        return (String) getAttributeInternal(NOTETOBUYER);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTE_TO_BUYER using the alias name NoteToBuyer.
     * @param value value to set the NOTE_TO_BUYER
     */
    public void setNoteToBuyer(String value) {
        setAttributeInternal(NOTETOBUYER, value);
    }

    /**
     * Gets the attribute value for NOTE_TO_SUPPLIER using the alias name NoteToSupplier.
     * @return the NOTE_TO_SUPPLIER
     */
    public String getNoteToSupplier() {
        return (String) getAttributeInternal(NOTETOSUPPLIER);
    }

    /**
     * Sets <code>value</code> as attribute value for NOTE_TO_SUPPLIER using the alias name NoteToSupplier.
     * @param value value to set the NOTE_TO_SUPPLIER
     */
    public void setNoteToSupplier(String value) {
        setAttributeInternal(NOTETOSUPPLIER, value);
    }

    /**
     * Gets the attribute value for APROX_PRICE using the alias name AproxPrice.
     * @return the APROX_PRICE
     */
    public BigDecimal getAproxPrice() {
        return (BigDecimal) getAttributeInternal(APROXPRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for APROX_PRICE using the alias name AproxPrice.
     * @param value value to set the APROX_PRICE
     */
    public void setAproxPrice(BigDecimal value) {
        setAttributeInternal(APROXPRICE, value);
    }

    /**
     * Gets the attribute value for TXT_ITEM_NAME using the alias name txtItemName.
     * @return the TXT_ITEM_NAME
     */
    public String gettxtItemName() {
        return (String) getAttributeInternal(TXTITEMNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TXT_ITEM_NAME using the alias name txtItemName.
     * @param value value to set the TXT_ITEM_NAME
     */
    public void settxtItemName(String value) {
        setAttributeInternal(TXTITEMNAME, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SrItemsView.
     */
    public Row getSrItemsView() {
        return (Row) getAttributeInternal(SRITEMSVIEW);
    }

    /**
     * Sets the master-detail link SrItemsView between this object and <code>value</code>.
     */
    public void setSrItemsView(Row value) {
        setAttributeInternal(SRITEMSVIEW, value);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link SrPurchaseDemandHeaderView.
     */
    public Row getSrPurchaseDemandHeaderView() {
        return (Row) getAttributeInternal(SRPURCHASEDEMANDHEADERVIEW);
    }

    /**
     * Sets the master-detail link SrPurchaseDemandHeaderView between this object and <code>value</code>.
     */
    public void setSrPurchaseDemandHeaderView(Row value) {
        setAttributeInternal(SRPURCHASEDEMANDHEADERVIEW, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccSrItemsView.
     */
    public RowSet getAccSrItemsView() {
        return (RowSet) getAttributeInternal(ACCSRITEMSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccPrgProjectView.
     */
    public RowSet getAccPrgProjectView() {
        return (RowSet) getAttributeInternal(ACCPRGPROJECTVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AccAllDepartmentsView.
     */
    public RowSet getAccAllDepartmentsView() {
        return (RowSet) getAttributeInternal(ACCALLDEPARTMENTSVIEW);
    }
    @Override
    public boolean isAttributeUpdateable(int i) {
        if (getSrPurchaseDemandHeaderView().getAttribute("Posted").equals("Y")) {
            return false;
       }
        return super.isAttributeUpdateable(i);
    }
}

